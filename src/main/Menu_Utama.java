/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import com.formdev.flatlaf.extras.FlatAnimatedLafChange;
import com.formdev.flatlaf.FlatDarculaLaf;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatLaf;
import form.Dashboard;
import form.Form_BahanBaku;
import form.Form_DetailKulakan;
import form.Form_GajiKaryawan;
import form.Form_JenisEs;
import form.Form_Karyawan;
import form.Form_Mesin;
import form.Form_Produk;
import form.Form_Produksi;
import form.Form_Produk;
import form.Form_Supplier;
import form.Form_DetailPesanan;
import form.Form_TransGaji;
import form.Form_TransPesan;
import form.Form_TransKulak;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.UIManager;
import javax.swing.Timer;

/**
 *
 * @author Rifal
 */
public class Menu_Utama extends javax.swing.JFrame {
private Timer timer;

private void showDayDateTime(){
    Calendar calendar = Calendar.getInstance();
    Date now = new Date();
    SimpleDateFormat formatHari = new SimpleDateFormat("EEEE",new Locale("in","ID"));
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:MM:SS");
    String hari = formatHari.format(calendar.getTime());
    String dateTime = dateFormat.format(now);
    lb_tanggal.setText(hari +", "+dateTime);
}    



    public Menu_Utama() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);

        execute();
        timer = new Timer(1000,new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                 showDayDateTime();
            }
        });
               timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupAkses = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        pn_navbar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lb_tanggal = new javax.swing.JLabel();
        pn_sidebar = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pn_menu = new javax.swing.JPanel();
        pn_content = new javax.swing.JPanel();
        pn_utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        pn_navbar.setBackground(new java.awt.Color(120, 172, 236));

        jLabel1.setFont(new java.awt.Font("Swis721 Blk BT", 0, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/GlacierCube png (1).png"))); // NOI18N
        jLabel1.setText("Glacier Cube");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        lb_tanggal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lb_tanggal.setText("Hari, tanggal, dan waktu");

        javax.swing.GroupLayout pn_navbarLayout = new javax.swing.GroupLayout(pn_navbar);
        pn_navbar.setLayout(pn_navbarLayout);
        pn_navbarLayout.setHorizontalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 296, Short.MAX_VALUE)
                .addComponent(lb_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pn_navbarLayout.setVerticalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lb_tanggal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_navbar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pn_navbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pn_sidebar.setBackground(new java.awt.Color(255, 255, 255));
        pn_sidebar.setPreferredSize(new java.awt.Dimension(250, 495));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);

        pn_menu.setBackground(new java.awt.Color(255, 255, 255));
        pn_menu.setLayout(new javax.swing.BoxLayout(pn_menu, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane2.setViewportView(pn_menu);

        javax.swing.GroupLayout pn_sidebarLayout = new javax.swing.GroupLayout(pn_sidebar);
        pn_sidebar.setLayout(pn_sidebarLayout);
        pn_sidebarLayout.setHorizontalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );
        pn_sidebarLayout.setVerticalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        getContentPane().add(pn_sidebar, java.awt.BorderLayout.LINE_START);

        pn_content.setBackground(new java.awt.Color(114, 169, 235));

        pn_utama.setBackground(new java.awt.Color(255, 255, 255));
        pn_utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pn_contentLayout = new javax.swing.GroupLayout(pn_content);
        pn_content.setLayout(pn_contentLayout);
        pn_contentLayout.setHorizontalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_contentLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
        );
        pn_contentLayout.setVerticalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        getContentPane().add(pn_content, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(846, 613));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      
        pn_utama.add(new content_bg());
        pn_utama.repaint();
        pn_utama.revalidate();
    }//GEN-LAST:event_formWindowOpened

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked

           HakAkses HA;
        HA = new HakAkses();
        HA.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
            UIManager.put("TextComponent.arc", 10);
            UIManager.put("Button.arc", 20);
            UIManager.put("Component.arc", 20);
            UIManager.put("ProgressBar.arc", 20);
            UIManager.put("Component.arrowType", "chevron");
            UIManager.put("Component.innerFocusWidth", 0);
            UIManager.put("Button.innerFocusWidth", 0);
            UIManager.put("ScrollBar.trackArc", 999);
            UIManager.put("ScrollBar.thumbArc", 999);
            UIManager.put("ScrollBar.trackInsets", new Insets(2, 4, 2, 4));
            UIManager.put("ScrollBar.thumbInsets", new Insets(2, 2, 2, 2));
            UIManager.put("ScrollBar.track", new Color(0xe0e0e0));

        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_Utama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupAkses;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lb_tanggal;
    private javax.swing.JPanel pn_content;
    private javax.swing.JPanel pn_menu;
    private javax.swing.JPanel pn_navbar;
    private javax.swing.JPanel pn_sidebar;
    private javax.swing.JPanel pn_utama;
    // End of variables declaration//GEN-END:variables

    private void execute() {
        ImageIcon iconMaster = new ImageIcon(getClass().getResource("/img/mas_Master.png"));
         ImageIcon iconkeuangan = new ImageIcon(getClass().getResource("/img/keuangan.png"));
        ImageIcon iconKaryawan = new ImageIcon(getClass().getResource("/img/mas_Karyawan.png"));
        ImageIcon iconGaji = new ImageIcon(getClass().getResource("/img/mas_Gaji.png"));
        ImageIcon iconTransaction = new ImageIcon(getClass().getResource("/img/mas_TransGaji.png"));
        ImageIcon iconKepegawaian = new ImageIcon(getClass().getResource("/img/mas_Kepegawaian.png"));
        ImageIcon iconOperasional = new ImageIcon(getClass().getResource("/img/operational.png"));
        ImageIcon iconMesin = new ImageIcon(getClass().getResource("/img/mesin.png"));
        ImageIcon iconProduksi = new ImageIcon(getClass().getResource("/img/production.png"));
        ImageIcon iconDetailMesin = new ImageIcon(getClass().getResource("/img/detail.png"));
        ImageIcon iconBarang = new ImageIcon(getClass().getResource("/img/mas_Barang.png"));
        ImageIcon iconProduk = new ImageIcon(getClass().getResource("/img/produk.png"));
        ImageIcon iconBahanBaku = new ImageIcon(getClass().getResource("/img/bahan.png"));
        ImageIcon iconStock = new ImageIcon(getClass().getResource("/img/stock.png"));
        ImageIcon iconKeuangan = new ImageIcon(getClass().getResource("/img/keuangan.png"));
        ImageIcon iconReport = new ImageIcon(getClass().getResource("/img/report.png"));
        ImageIcon iconHome = new ImageIcon(getClass().getResource("/img/home.png"));
        ImageIcon iconLogout = new ImageIcon(getClass().getResource("/img/logout.png"));
        ImageIcon iconSupplier = new ImageIcon(getClass().getResource("/img/supplier.png"));
        ImageIcon iconPlusOrder = new ImageIcon(getClass().getResource("/img/tambahOrder.png"));
        ImageIcon iconCustomer = new ImageIcon(getClass().getResource("/img/customer.png"));
        ImageIcon iconOrder = new ImageIcon(getClass().getResource("/img/order.png"));
        ImageIcon iconDetailOrder = new ImageIcon(getClass().getResource("/img/detail2.png"));
        ImageIcon iconJenises = new ImageIcon(getClass().getResource("/img/jenis.png"));
          ImageIcon iconKulakan = new ImageIcon(getClass().getResource("/img/Kulakan.png"));
         ImageIcon iconDetKulak = new ImageIcon(getClass().getResource("/img/DetKulak.png"));
        ImageIcon iconberkulak = new ImageIcon(getClass().getResource("/img/berkulak.png"));
       
        MenuItem Jenises = new MenuItem(null, true, iconJenises, "Jenis Es", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Form_JenisEs());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        MenuItem order = new MenuItem(null, true, iconPlusOrder, "Tambahkan Pesanan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Form_TransPesan());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        
        MenuItem karyawan = new MenuItem(null, true, iconKaryawan, "Karyawan", new ActionListener() {
            @Override

            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Form_Karyawan());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        MenuItem gaji = new MenuItem(null, true, iconGaji, "Detail Gaji", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Form_GajiKaryawan());
                pn_utama.repaint();
                pn_utama.revalidate();

            }
        });
        MenuItem transaksiGaji = new MenuItem(null, true, iconTransaction, "Transaksi Gaji", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
          pn_utama.removeAll();
                pn_utama.add(new Form_TransGaji());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });

        MenuItem Produksi = new MenuItem(null, true, iconProduksi, "Produksi", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Form_Produksi());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        MenuItem Mesin = new MenuItem(null, true, iconMesin, "Mesin", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Form_Mesin());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });

      
        MenuItem Supplier = new MenuItem(null, true, iconSupplier, "Supplier", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
       pn_utama.removeAll();
                pn_utama.add(new Form_Supplier());
                pn_utama.repaint();
                pn_utama.revalidate();

            }
        });
        MenuItem BahanBaku = new MenuItem(null, true, iconBahanBaku, "Bahan Baku", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Form_BahanBaku());
                pn_utama.repaint();
                pn_utama.revalidate();

                     }
        });
        MenuItem Produk = new MenuItem(null, true, iconProduk, "Produk", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Form_Produk());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        MenuItem TransaksiKulakan = new MenuItem(null, true, iconKulakan, "Tambah Kulakan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Form_TransKulak());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });

        MenuItem pesan = new MenuItem(null, true, iconDetailOrder, "Detail Pesanan", new ActionListener() {
        public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
                pn_utama.add(new Form_DetailPesanan());
                pn_utama.repaint();
                pn_utama.revalidate();   
               }
        });
            MenuItem DetailKulakan = new MenuItem(null, true, iconDetKulak," Detail Kulakan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
                pn_utama.add(new Form_DetailKulakan());
                pn_utama.repaint();
                pn_utama.revalidate();   
            }
        });

        MenuItem menuHome = new MenuItem(iconHome, false, null, "Home", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new content_bg());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        MenuItem menuDashboard = new MenuItem(iconkeuangan, false, null, "Dashboard", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new Dashboard());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        
        

        MenuItem menuPesanan = new MenuItem(iconOrder, false, null, "Pesanan", null,  order, pesan);
        MenuItem menuKepegawaian = new MenuItem(iconKepegawaian, false, null, "Kepegawaian", null, karyawan, gaji, transaksiGaji);
        MenuItem menuOperasional = new MenuItem(iconOperasional, false, null, "Operasional", null, Produksi, Mesin);
        MenuItem menuBarang = new MenuItem(iconBarang, false, null, "Barang", null, Produk,Jenises,BahanBaku);
        MenuItem menuKulakan = new MenuItem(iconberkulak, false, null, "Kulakan", null,TransaksiKulakan, DetailKulakan, Supplier);
      
 addMenu(menuHome, menuDashboard, menuPesanan, menuKepegawaian, menuOperasional, menuBarang, menuKulakan);
    }
    
    
    private void addMenu(MenuItem... menu) {
        for (int i = 0; i < menu.length; i++) {
            pn_menu.add(menu[i]);
            ArrayList<MenuItem> subMenu = menu[i].getSubMenu();
            for (MenuItem m : subMenu) {
                addMenu(m);
            }
        }
        pn_menu.revalidate();
    }
      
}
